[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-zammad"
version = "0.2.0"
description = "Model Context Protocol server for Zammad ticket system integration (unofficial)"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "AGPL-3.0-or-later" }
authors = [{ name = "basher83", email = "crashoverride6545@gmail.com" }]
keywords = ["mcp", "zammad", "tickets", "support", "api"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.12.2",
    "zammad-py>=3.2.0",
    "pydantic>=2.11.7",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pip-audit>=2.6.0",
    "bandit[sarif]>=1.8.6",
    "semgrep>=1.35.0",
    "safety>=2.3.1",
    "defusedxml>=0.7.1",
    "pre-commit>=3.0.0",
]

[project.scripts]
mcp-zammad = "mcp_zammad.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["mcp_zammad"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "N",
    "UP",
    "YTT",
    "B",
    "A",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "ISC",
    "ICN",
    "PIE",
    "Q",
    "RET",
    "SIM",
    "TID",
    "ARG",
    "ERA",
    "PGH",
    "PL",
    "TRY",
    "RUF",
]
ignore = ["E501", "PLR0913", "TRY003", "EM101", "EM102"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "PLR2004",
    "S101",
    "ARG001",
    "ARG002",
] # Allow magic numbers, asserts, and unused args in tests

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = true

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pip-audit>=2.6.0",
    "bandit[sarif]>=1.8.6",
    "semgrep>=1.35.0",
    "safety>=2.3.1",
    "defusedxml>=0.7.1",
    "pre-commit>=3.0.0",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]         # Skip assert_used test

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]

[tool.coverage.run]
source = ["mcp_zammad"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == \"__main__\":",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.uv]
# Force authlib to secure version to fix vulnerabilities in safety dependency
# GHSA-9ggr-2464-2j32, GHSA-pq5p-34cr-23v9, GHSA-g7f3-828f-7h7m
override-dependencies = [
    "authlib>=1.6.5",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --tb=short"
